{"version":3,"sources":["components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","this","props","todo","index","toggleTodo","deleteTodo","className","completed","title","role","aria-label","onClick","data-index","Component","TodoList","todos","map","App","state","inputValue","e","target","getAttribute","setState","splice","submitHandler","preventDefault","newTodo","complete","onSubmit","type","placeholder","value","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAmCeA,E,uKAhCH,IAAD,EACyCC,KAAKC,MAA7CC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,WAAYC,EAD1B,EAC0BA,WACjC,OACE,+BACE,sBAAMC,UAAS,eAAUJ,EAAKK,UAAY,YAAc,IAAxD,SACGL,EAAKM,QAER,sBACEC,KAAK,MACLC,aAAW,QACXJ,UAAU,YACVK,QAASP,EACTQ,aAAYT,EACZK,MAAM,oBANR,oBAUA,sBACEC,KAAK,MACLC,aAAW,QACXJ,UAAU,YACVK,QAASN,EACTO,aAAYT,EACZK,MAAM,eANR,sBAdON,EAAKM,W,GAJDK,aCkBJC,E,uKAhBH,IAAD,EACmCd,KAAKC,MAAvCc,EADD,EACCA,MAAOX,EADR,EACQA,WAAYC,EADpB,EACoBA,WAC3B,OAAOU,EAAMC,KAAI,SAACd,EAAMC,GACtB,OACE,cAAC,EAAD,CACED,KAAMA,EACNC,MAAOA,EACPC,WAAYA,EACZC,WAAYA,GACPH,EAAKM,c,GAVGK,aCuERI,G,kNArEbC,MAAQ,CACNH,MAAO,CACL,CAAEP,MAAO,wBAAyBD,WAAW,GAC7C,CAAEC,MAAO,0BAA2BD,WAAW,IAEjDY,WAAY,I,EAGdf,WAAa,SAACgB,GACZ,IAAMjB,EAAQiB,EAAEC,OAAOC,aAAa,cAC9BP,EAAK,YAAO,EAAKG,MAAMH,OACvBb,EAAI,eAAQa,EAAMZ,IACxBD,EAAKK,WAAaL,EAAKK,UACvBQ,EAAMZ,GAASD,EACf,EAAKqB,SAAS,CAAER,MAAOA,K,EAGzBV,WAAa,SAACe,GACZ,IAAMjB,EAAQiB,EAAEC,OAAOC,aAAa,cAC9BP,EAAK,YAAO,EAAKG,MAAMH,OAC7BA,EAAMS,OAAOrB,EAAO,GACpB,EAAKoB,SAAS,CAAER,MAAOA,K,EAGzBU,cAAgB,SAACL,GACfA,EAAEM,iBACF,IAAMC,EAAU,CACdnB,MAAO,EAAKU,MAAMC,WAClBS,UAAU,GAEZ,EAAKL,SAAS,CACZR,MAAM,GAAD,mBAAM,EAAKG,MAAMH,OAAjB,CAAwBY,IAC7BR,WAAY,M,uDAIN,IAAD,OACP,OACE,qBAAKb,UAAU,MAAf,SACE,sBAAKA,UAAU,sBAAf,UACE,oBAAIA,UAAU,QAAd,oCACA,6BAEI,cAAC,EAAD,CACES,MAAOf,KAAKkB,MAAMH,MAClBX,WAAYJ,KAAKI,WACjBC,WAAYL,KAAKK,eAIvB,uBAAMwB,SAAU7B,KAAKyB,cAArB,UACE,uBACEK,KAAK,OACLC,YAAY,gBACZC,MAAOhC,KAAKkB,MAAMC,WAClBc,SAAU,SAACb,GAAD,OAAO,EAAKG,SAAS,CAAEJ,WAAYC,EAAEC,OAAOW,WAExD,iCACE,sBAAMvB,KAAK,MAAMC,aAAW,QAA5B,kC,GA3DIG,cCQHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.febab35d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Todo extends Component {\n  render() {\n    const { todo, index, toggleTodo, deleteTodo } = this.props;\n    return (\n      <li key={todo.title}>\n        <span className={`task ${todo.completed ? \"completed\" : \"\"}`}>\n          {todo.title}\n        </span>\n        <span\n          role=\"img\"\n          aria-label=\"emoji\"\n          className=\"icon-task\"\n          onClick={toggleTodo}\n          data-index={index}\n          title=\"Mark as complete.\"\n        >\n          âœ…\n        </span>\n        <span\n          role=\"img\"\n          aria-label=\"emoji\"\n          className=\"icon-task\"\n          onClick={deleteTodo}\n          data-index={index}\n          title=\"Remove task.\"\n        >\n          â›”\n        </span>\n      </li>\n    );\n  }\n}\n\nexport default Todo;\n","import React, { Component } from \"react\";\nimport Todo from \"./Todo.js\";\n\nclass TodoList extends Component {\n  render() {\n    const { todos, toggleTodo, deleteTodo } = this.props;\n    return todos.map((todo, index) => {\n      return (\n        <Todo\n          todo={todo}\n          index={index}\n          toggleTodo={toggleTodo}\n          deleteTodo={deleteTodo}\n          key={todo.title}\n        />\n      );\n    });\n  }\n}\n\nexport default TodoList;\n","import React, { Component } from \"react\";\nimport TodoList from \"./components/TodoList.js\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    todos: [\n      { title: \"Complete task example\", completed: false },\n      { title: \"Incomplete task example\", completed: true },\n    ],\n    inputValue: \"\",\n  };\n\n  toggleTodo = (e) => {\n    const index = e.target.getAttribute(\"data-index\");\n    const todos = [...this.state.todos];\n    const todo = { ...todos[index] };\n    todo.completed = !todo.completed;\n    todos[index] = todo;\n    this.setState({ todos: todos });\n  };\n\n  deleteTodo = (e) => {\n    const index = e.target.getAttribute(\"data-index\");\n    const todos = [...this.state.todos];\n    todos.splice(index, 1);\n    this.setState({ todos: todos });\n  };\n\n  submitHandler = (e) => {\n    e.preventDefault();\n    const newTodo = {\n      title: this.state.inputValue,\n      complete: false,\n    };\n    this.setState({\n      todos: [...this.state.todos, newTodo],\n      inputValue: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"todo-list-container\">\n          <h1 className=\"title\">ToDo List ðŸ“ƒ</h1>\n          <ul>\n            {\n              <TodoList\n                todos={this.state.todos}\n                toggleTodo={this.toggleTodo}\n                deleteTodo={this.deleteTodo}\n              />\n            }\n          </ul>\n          <form onSubmit={this.submitHandler}>\n            <input\n              type=\"text\"\n              placeholder=\"Add task here\"\n              value={this.state.inputValue}\n              onChange={(e) => this.setState({ inputValue: e.target.value })}\n            />\n            <button>\n              <span role=\"img\" aria-label=\"emoji\">\n                âž•\n              </span>\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}